{
  "bundles": [
    {
      "name": "base",
      "description": "Core schema, CDK, service, and fake scaffolding that every repository needs.",
      "required": true,
      "templates": [
        {
          "source": "schema/index.ts.tpl",
          "target": "packages/core/schemas/schemas/__ENTITY_SLUG__/index.ts"
        },
        {
          "source": "schema/constants/index.ts.tpl",
          "target": "packages/core/schemas/schemas/__ENTITY_SLUG__/constants/index.ts"
        },
        {
          "source": "schema/constants/__ENTITY_CAMEL__.ts.tpl",
          "target": "packages/core/schemas/schemas/__ENTITY_SLUG__/constants/__ENTITY_CAMEL__.ts"
        },
        {
          "source": "schema/__ENTITY_CAMEL__.ts.tpl",
          "target": "packages/core/schemas/schemas/__ENTITY_SLUG__/__ENTITY_CAMEL__.ts"
        },
        {
          "source": "schema/__ENTITY_CAMEL__Create.ts.tpl",
          "target": "packages/core/schemas/schemas/__ENTITY_SLUG__/__ENTITY_CAMEL__Create.ts"
        },
        {
          "source": "schema/__ENTITY_CAMEL__.schemas.test.ts.tpl",
          "target": "packages/core/schemas/schemas/__ENTITY_SLUG__/__ENTITY_CAMEL__.schemas.test.ts"
        },
        {
          "source": "service/repository.service.ts.tpl",
          "target": "apps/node-server/src/services/__ENTITY_CAMEL__Repo.service.ts"
        },
        {
          "source": "fake/repository.fake.ts.tpl",
          "target": "apps/node-server/src/__tests__/fakes/__ENTITY_CAMEL__Repo.ts"
        },
        {
          "source": "cdk/__ENTITY_CAMEL__-table.constants.ts.tpl",
          "target": "cdk/backend-server-cdk/src/stacks/api-stack/__ENTITY_CAMEL__-table.constants.ts"
        },
        {
          "source": "cdk/generate-table.ts.tpl",
          "target": "cdk/backend-server-cdk/src/stacks/api-stack/generate-__ENTITY_SLUG__-table.ts"
        }
      ],
      "checklist": [
        "## Schema — incremental validation",
        "- [ ] Populate domain attributes in `packages/core/schemas/schemas/__ENTITY_SLUG__/__ENTITY_CAMEL__.ts`; run `npm -w @packages/schemas run lint`.",
        "- [ ] Trim caller inputs in `packages/core/schemas/schemas/__ENTITY_SLUG__/__ENTITY_CAMEL__Create.ts`; re-run `npm -w @packages/schemas run lint`.",
        "- [ ] Define key/index constants in `packages/core/schemas/schemas/__ENTITY_SLUG__/constants/__ENTITY_CAMEL__.ts` and confirm `npm -w @packages/schemas run lint` stays green.",
        "- [ ] Update the schema barrel exports to surface the new DTOs/constants; run `npm -w @packages/schemas run lint`.",
        "- [ ] Replace skipped cases in `packages/core/schemas/schemas/__ENTITY_SLUG__/__ENTITY_CAMEL__.schemas.test.ts`, then execute `npm -w @packages/schemas run test -- --runTestsByPath schemas/__ENTITY_SLUG__/__ENTITY_CAMEL__.schemas.test.ts`.",
        "",
        "## Infrastructure — staged updates",
        "- [ ] Describe the table and placeholder GSIs inside `cdk/backend-server-cdk/src/stacks/api-stack/__ENTITY_CAMEL__-table.constants.ts`; run `npm -w @cdk/backend-server-cdk run lint`.",
        "- [ ] Flesh out `cdk/backend-server-cdk/src/stacks/api-stack/generate-__ENTITY_SLUG__-table.ts` (attributes, TTL, outputs) and re-run `npm -w @cdk/backend-server-cdk run lint`.",
        "- [ ] Wire `generate__ENTITY_PASCAL__Table` into the stack index plus any required exports; confirm `npm -w @cdk/backend-server-cdk run lint` stays green.",
        "- [ ] Extend `ApiStackOutputSchema`, `apps/node-server/src/clients/cdkOutputs.ts`, and related stubs/tests with the table name; execute `npm -w apps/node-server run lint`.",
        "",
        "## Service layer — incremental wiring",
        "- [ ] Replace the `tableName` placeholder in `apps/node-server/src/services/__ENTITY_CAMEL__Repo.service.ts` with the generated CDK output; run `npm -w apps/node-server run lint`.",
        "- [ ] Adapt get/create operations to the new schema (keys, projections, validations); add/update targeted service tests and execute `npm -w apps/node-server run test -- --runTestsByPath src/__tests__/services/__ENTITY_CAMEL__Repo.service.test.ts`.",
        "- [ ] Register the live layer in `apps/node-server/src/layers/app.layer.ts` and confirm `npm -w apps/node-server run test -- --runTestsByPath src/__tests__/layers/app.layer.test.ts` stays green.",
        "",
        "## Fakes & integration coverage",
        "- [ ] Tailor `apps/node-server/src/__tests__/fakes/__ENTITY_CAMEL__Repo.ts` to the repository contract; run `npm -w apps/node-server run test -- --runTestsByPath src/__tests__/fakes/__ENTITY_CAMEL__Repo.ts`.",
        "- [ ] Add or update repository unit/contract tests (e.g. under `src/__tests__/services`) and execute that suite.",
        "- [ ] Update handler/service slices to inject the repository where relevant and re-run affected Vitest/supertest suites.",
        "- [ ] Wire CDK output stubs/fakes in existing suites; rerun the impacted tests to ensure they pass.",
        "",
        "## Verification & memory — closeout",
        "- [ ] Run `npm run lint` at the repo root.",
        "- [ ] Run `npm run test` (or the targeted suites touched).",
        "- [ ] Execute `npm run memory:validate` and `npm run memory:drift`.",
        "- [ ] Append Memory Bank reflexion/progress log entries and stamp `agents/memory-bank.md`.",
        "- [ ] Finish with `npm run phase:check`."
      ]
    },
    {
      "name": "handler",
      "description": "Adds an HTTP handler skeleton and test stub wired to the new repository.",
      "required": false,
      "templates": [
        {
          "source": "handlers/__ENTITY_CAMEL__.handler.ts.tpl",
          "target": "apps/node-server/src/handlers/get__ENTITY_PASCAL__.handler.ts"
        },
        {
          "source": "tests/__ENTITY_CAMEL__.handler.test.ts.tpl",
          "target": "apps/node-server/src/__tests__/handlers/get__ENTITY_PASCAL__.handler.test.ts"
        }
      ],
      "checklist": [
        "## Handler integration (optional bundle)",
        "- [ ] Define the request schema + repository interaction in `apps/node-server/src/handlers/get__ENTITY_PASCAL__.handler.ts`; ensure `npm -w apps/node-server run lint` stays green.",
        "- [ ] Flesh out Arrange/Act/Assert coverage in `apps/node-server/src/__tests__/handlers/get__ENTITY_PASCAL__.handler.test.ts` and run the test directly.",
        "- [ ] Register the handler with the appropriate router and rerun affected integration suites."
      ]
    }
  ]
}
