{
  "name": "repository-service",
  "description": "Scaffold a repository service with schema, infra, service, and optional handler bundles.",
  "templateRoot": "../templates/repository-service",
  "manifest": "../templates/repository-service/manifest.json",
  "usage": [
    "Usage: node scripts/create-repository-service.mjs <entity-slug> [--dry-run] [--force] [--with bundleA,bundleB]",
    "",
    "Examples:",
    "  node scripts/create-repository-service.mjs user-profile",
    "  node scripts/create-repository-service.mjs order --with handler --dry-run",
    "",
    "Flags:",
    "  --with bundleA,bundleB  Include optional bundles (use \"all\" to include everything)",
    "  --dry-run               Preview generated files without writing them",
    "  --force                 Overwrite existing files created by a previous run",
    "",
    "Run without --with in an interactive terminal to choose bundles via prompts."
  ],
  "flags": [
    {
      "key": "withBundles",
      "long": "--with",
      "type": "list",
      "description": "Include optional bundles by name (use \"all\" for everything)",
      "separator": ","
    },
    {
      "key": "dryRun",
      "long": "--dry-run",
      "type": "boolean",
      "description": "Preview generated files without writing."
    },
    {
      "key": "force",
      "long": "--force",
      "type": "boolean",
      "description": "Overwrite existing files created by a previous run."
    }
  ],
  "arguments": {
    "slug": {
      "description": "Entity slug in kebab-case.",
      "pattern": "^[a-z][a-z0-9-]*$",
      "errorMessage": "Invalid slug. Use kebab-case (letters, numbers, hyphen)."
    }
  },
  "normalise": {
    "withBundles": "lowercase"
  },
  "tokens": [
    { "name": "__ENTITY_SLUG__", "resolver": "slug" },
    { "name": "__ENTITY_PASCAL__", "resolver": "pascalCase" },
    { "name": "__ENTITY_CAMEL__", "resolver": "camelCase" },
    { "name": "__ENTITY_CONSTANT__", "resolver": "constantCase" },
    { "name": "__TIMESTAMP__", "resolver": "timestamp" }
  ],
  "hooks": {
    "preScaffold": [],
    "renderTemplates": ["core.renderTemplates"],
    "postScaffold": [
      "repositoryService.updateSchemasPackageJson",
      "repositoryService.updateAppLayer",
      "repositoryService.runLintFix",
      "repositoryService.writeChecklist"
    ]
  },
  "interactive": {
    "bundlePrompt": true
  },
  "checklist": {
    "target": "scripts/output/repository-service/__ENTITY_SLUG__-checklist.md",
    "headerLines": [
      "# Repository Service Checklist: __ENTITY_PASCAL__",
      "",
      "- Workflow reference: `agents/workflows/repository-service.workflow.md`",
      "- Generated by `scripts/create-repository-service.mjs` on __TIMESTAMP__",
      "- Selected bundles: __SELECTED_BUNDLES__",
      ""
    ]
  },
  "nextSteps": [
    "Next steps: review scripts/output/repository-service/__ENTITY_SLUG__-checklist.md and work through the checklist."
  ]
}
